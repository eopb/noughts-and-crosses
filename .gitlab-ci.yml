
image: "archlinux/base"


before_script:
  - pacman -Syyu --noconfirm
  - pacman -Sy grep --noconfirm
  - curl https://sh.rustup.rs -sSf | sh -s -- -y
  - pacman -Sy gtk3 gcc cc --noconfirm
  - export PATH="$HOME/.cargo/bin:$PATH"

stages:
  - check
  - publish
  - deploy
  - post-run


clean-code:
  stage: check
  script:
    - rustup component add rustfmt-preview
    - cargo fmt --all -- --check
  allow_failure: true

check:
  stage: check
  script:
    - cargo check

linux-optimized:
  stage: deploy
  script:
    - cargo build --release
    - rm -r -f files
    - mkdir files
    - cp target/release/noughts-and-crosses files
  when: on_success
  artifacts:
    paths:
      - files
    expire_in: 2 weeks

windows-optimized:
  stage: deploy
  script:
    - rustup target add x86_64-pc-windows-gnu
    - cat /etc/pacman.conf
    - echo [archlinuxfr] >> /etc/pacman.conf
    - echo SigLevel = Never >> /etc/pacman.conf
    - echo Server = http://repo.archlinux.fr/$arch >> /etc/pacman.conf
    - cat /etc/pacman.conf
    - pacman -Sy yaourt --noconfirm
    - yaourt -S mingw-w64-harfbuzz
    - yaourt -S mingw-w64-gcc mingw-w64-freetype2-bootstrap mingw-w64-cairo-bootstrap
    - yaourt -S mingw-w64-pango
    - yaourt -S mingw-w64-poppler
    - yaourt -S mingw-w64-gtk3
    - export PKG_CONFIG_ALLOW_CROSS=1
    - export PKG_CONFIG_PATH=/usr/i686-w64-mingw32/lib/pkgconfig
    - cargo build --target=x86_64-pc-windows-gnu --release
    - rm -r -f files
    - tree
    - mkdir files
    - cp target/release/noughts-and-crosses files
  when: on_success
  artifacts:
    paths:
      - files
    expire_in: 2 weeks

cratesio:
  stage: publish
  script:
    - rm -r -f files
    - cargo login $CARGO_LOGIN
    - cargo package
    - cargo publish
  when: on_success
  only:
    refs:
      - stable
  allow_failure: true


clippy:
  stage: post-run
  script:
    - rustup default nightly
    - rustup update
    - rustup component add clippy-preview
    - cargo clippy -- -D clippy::pedantic
  allow_failure: true